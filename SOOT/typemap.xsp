%typemap{AV*}{simple};

%typemap{TGraphFloatArray}{parsed}{%SV*%}{%
  $$ = SOOT::FloatVecToAV<double>(aTHX_ $1, THIS->GetN());
%};

%typemap{TH1FloatArray}{parsed}{%SV*%}{%
  $$ = SOOT::FloatVecToAV<double>(aTHX_ $1, THIS->GetNbinsX());
%};


%typemap{TArrayDoubleArray}{parsed}{%SV*%}{%
  $$ = SOOT::FloatVecToAV<double>(aTHX_ $1, THIS->GetSize());
%};

%typemap{TArrayFloatArray}{parsed}{%SV*%}{%
  $$ = SOOT::FloatVecToAV<float>(aTHX_ $1, THIS->GetSize());
%};


%typemap{TArrayLongArray}{parsed}{%SV*%}{%
  $$ = SOOT::IntegerVecToAV<long int>(aTHX_ $1, THIS->GetSize());
%};

%typemap{TArrayIntArray}{parsed}{%SV*%}{%
  $$ = SOOT::IntegerVecToAV<int>(aTHX_ $1, THIS->GetSize());
%};

%typemap{TArrayCharArray}{parsed}{%SV*%}{%
  $$ = SOOT::IntegerVecToAV<char>(aTHX_ $1, THIS->GetSize());
%};

%typemap{TArrayShortArray}{parsed}{%SV*%}{%
  $$ = SOOT::IntegerVecToAV<short>(aTHX_ $1, THIS->GetSize());
%};


%typemap{TFormulaFloatArray}{parsed}{%SV*%}{%
  $$ = SOOT::FloatVecToAV<double>(aTHX_ $1, THIS->GetNpar());
%};
